from aiogram import Router, F, Bot
from aiogram.types import (
    CallbackQuery,
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from data.database import db
from keyboards.user.user_inline import get_cancel_menu
from utils.json_utils import get_project_percentage

from callbacks.user.add_project_fixed import AddProjectFixed

router = Router()


@router.callback_query(F.data == "add_project")
async def add_project(callback: CallbackQuery, state: FSMContext, bot: Bot):
    user = await db.get_user(callback.from_user.id)
    user_projects = await db.get_user_projects(callback.from_user.id)
    fixed_projects = [
        project for project in user_projects if project["project_type"] == "fixed"
    ]

    if len(fixed_projects) >= user["max_projects"]:
        kb = [
            [
                InlineKeyboardButton(
                    text="‚ûï –î–æ–∫—É–ø–∏—Ç—å –ø—Ä–æ–µ–∫—Ç—ã", callback_data="buy_more_projects"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –∑–∞ {int(get_project_percentage() * 100)}% –æ—Ç –¥–æ—Ö–æ–¥–∞",
                    callback_data="add_project_percent",
                )
            ],
            [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")],
        ]
        keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

        await bot.edit_message_text(
            text="‚ùå –£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤",
            reply_markup=keyboard,
            chat_id=callback.from_user.id,
            message_id=callback.message.message_id,
        )
        return
    else:
        msg = await bot.edit_message_text(
            text="üìã –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
            reply_markup=await get_cancel_menu(),
            chat_id=callback.from_user.id,
            message_id=callback.message.message_id,
        )

        await state.update_data({"msg_id": msg.message_id})

        await state.set_state(AddProjectFixed.name)
